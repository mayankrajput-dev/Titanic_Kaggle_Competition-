# -*- coding: utf-8 -*-
"""Titanic KC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tn_XE6MjBD2otOA9HsKHOGe4iQ3a9jQl
"""

import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import google.colab
import io

from google.colab import files

upl=files.upload()

df=pd.read_csv(io.BytesIO(upl['train.csv']))

df=pd.DataFrame(df)

df.head()

df1=df.copy()

df1.head()

df1=df1.drop(['Pclass', 'Ticket', 'Fare', 'Cabin', 'Embarked'], axis='columns')

df1.head()

df1.isnull().sum()

age_mean= df1['Age'].mean()
age_mean

df1['Age']=df1['Age'].fillna(age_mean)

df1.head()

df1.isnull().sum()

df2=df1.copy()

df2.head()

target=df2['Survived']
target.head()

df2=df2.drop(['Survived','Name'], axis='columns')

df2.head()

df2['FamilyRelation']=df2['SibSp'] + df2['Parch']
df2.head()

df2=df2.drop(['SibSp','Parch'], axis='columns')

df2.head()

dummies=pd.get_dummies(df['Sex'])
dummies.head()

df2=df2.drop(['Sex'], axis='columns')
df2.head()

df2=pd.concat([df2, dummies],axis=1)
df2.head()

from sklearn.linear_model import LogisticRegression
lr_clf=LogisticRegression()

lr_clf.fit(df2,target)

lr_clf.score(df2,target)

upl=files.upload()

df3=pd.read_csv(io.BytesIO(upl['test.csv']))

df3.head()

df3=df3.drop(['Pclass','Name','Ticket','Fare','Cabin','Embarked'],axis='columns')
df3.head()

test_age_mean= df3['Age'].mean()
test_age_mean

df3['Age']=df1['Age'].fillna(test_age_mean)

df1.isnull().sum()

test_dummies=pd.get_dummies(df3['Sex'])

test_dummies.head()

df3=df3.drop(['Sex'], axis='columns')
df3.head()

df3=pd.concat([df3, test_dummies],axis=1)
df3.head()

df3['FamilyRelation']=df3['SibSp'] + df3['Parch']
df3.head()

df3=df3.drop(['SibSp','Parch'], axis='columns')

df3.head()

df3 = df3[['PassengerId', 'Age', 'FamilyRelation', 'female', 'male']]
df3.head()

predict=pd.DataFrame(lr_clf.predict(df3))

predict.columns=['Survived']

predict.head()

df4=pd.concat([df3['PassengerId'], predict['Survived']],axis=1)
df4.head()

df4.to_csv('survived_test.csv', index=False)
files.download('survived_test.csv')